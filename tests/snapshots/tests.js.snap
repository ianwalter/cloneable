// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`array 1`] = `
Array [
  Object {
    "title": "Bury Us",
    "updates": Array [
      9,
      10,
    ],
  },
  Array [
    Object {
      "regex": Object {
        "lastIndex": 0,
      },
      "results": Array [
        Object {
          "otherActions": Array [],
          "title": "Stay Forever",
        },
      ],
    },
  ],
]
`;

exports[`object 1`] = `
Object {
  "err": Object {
    "message": "Scratch that",
    "stack": StringContaining "Error: Scratch that",
  },
  "message": "Hello!",
  "song": Object {
    "date": Any<Date>,
    "index": 3,
  },
}
`;

exports[`serialize 1`] = `
Object {
  "message": "Request failed",
  "name": "HttpError",
  "response": Object {
    "_consuming": false,
    "_dumped": false,
    "_events": Object {
      "end": Array [],
    },
    "_eventsCount": 2,
    "_maxListeners": undefined,
    "_readableState": Object {
      "autoDestroy": false,
      "awaitDrainWriters": null,
      "buffer": Object {
        "head": null,
        "length": 0,
        "tail": null,
      },
      "decoder": null,
      "defaultEncoding": "utf8",
      "destroyed": false,
      "emitClose": true,
      "emittedReadable": false,
      "encoding": null,
      "endEmitted": true,
      "ended": true,
      "errorEmitted": false,
      "flowing": true,
      "highWaterMark": 16384,
      "length": 0,
      "multiAwaitDrain": false,
      "needReadable": false,
      "objectMode": false,
      "pipes": Array [],
      "readableListening": false,
      "reading": false,
      "readingMore": true,
      "resumeScheduled": false,
      "sync": true,
    },
    "aborted": false,
    "client": "response -> socket",
    "complete": true,
    "headers": Any<Object>,
    "httpVersion": "1.1",
    "httpVersionMajor": 1,
    "httpVersionMinor": 1,
    "method": null,
    "ok": false,
    "rawHeaders": Any<Array>,
    "rawTrailers": Array [],
    "readable": false,
    "req": "response -> socket -> _httpMessage",
    "socket": Object {
      "_events": Object {
        "close": Array [],
      },
      "_eventsCount": 6,
      "_hadError": false,
      "_host": "httpstat.us",
      "_httpMessage": Object {
        "_contentLength": 0,
        "_ended": true,
        "_events": Object {},
        "_eventsCount": 3,
        "_hasBody": true,
        "_header": "GET /401 HTTP/1.1
user-agent: @ianwalter/requester/2.2.0
Host: httpstat.us
Connection: close

",
        "_headerSent": true,
        "_last": true,
        "_maxListeners": undefined,
        "_removedConnection": false,
        "_removedContLen": false,
        "_removedTE": false,
        "_trailer": "",
        "aborted": false,
        "agent": Object {
          "_events": Object {},
          "_eventsCount": 2,
          "_maxListeners": undefined,
          "defaultPort": 80,
          "freeSockets": Object {},
          "keepAlive": false,
          "keepAliveMsecs": 1000,
          "maxFreeSockets": 256,
          "maxSockets": Infinity,
          "options": Object {
            "path": null,
          },
          "protocol": "http:",
          "requests": Object {},
          "sockets": Object {
            "httpstat.us:80:": Array [
              "response -> socket",
            ],
          },
        },
        "chunkedEncoding": false,
        "finished": true,
        "insecureHTTPParser": undefined,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "method": "GET",
        "outputData": Array [],
        "outputSize": 0,
        "parser": null,
        "path": "/401",
        "res": "response",
        "reusedSocket": false,
        "sendDate": false,
        "shouldKeepAlive": false,
        "socket": "response -> socket",
        "socketPath": undefined,
        "timeout": 60000,
        "upgradeOrConnect": false,
        "useChunkedEncodingByDefault": false,
        "writable": true,
      },
      "_maxListeners": undefined,
      "_parent": null,
      "_pendingData": null,
      "_pendingEncoding": "",
      "_readableState": Object {
        "autoDestroy": false,
        "awaitDrainWriters": null,
        "buffer": Object {
          "head": null,
          "length": 0,
          "tail": null,
        },
        "decoder": null,
        "defaultEncoding": "utf8",
        "destroyed": false,
        "emitClose": false,
        "emittedReadable": false,
        "encoding": null,
        "endEmitted": false,
        "ended": false,
        "errorEmitted": false,
        "flowing": true,
        "highWaterMark": 16384,
        "length": 0,
        "multiAwaitDrain": false,
        "needReadable": true,
        "objectMode": false,
        "pipes": Array [],
        "readableListening": false,
        "reading": true,
        "readingMore": false,
        "resumeScheduled": false,
        "sync": false,
      },
      "_server": null,
      "_sockname": null,
      "_writableState": Object {
        "afterWriteTickInfo": null,
        "autoDestroy": false,
        "bufferProcessing": false,
        "bufferedRequest": null,
        "bufferedRequestCount": 0,
        "corked": 0,
        "corkedRequestsFree": Object {
          "entry": null,
          "next": null,
        },
        "decodeStrings": false,
        "defaultEncoding": "utf8",
        "destroyed": false,
        "emitClose": false,
        "ended": true,
        "ending": true,
        "errorEmitted": false,
        "errored": false,
        "finalCalled": true,
        "finished": false,
        "highWaterMark": 16384,
        "lastBufferedRequest": null,
        "length": 0,
        "needDrain": false,
        "objectMode": false,
        "pendingcb": 1,
        "prefinished": false,
        "sync": false,
        "writecb": null,
        "writelen": 0,
        "writing": false,
      },
      "allowHalfOpen": false,
      "connecting": false,
      "parser": null,
      "readable": true,
      "server": null,
      "timeout": 0,
      "writable": false,
    },
    "statusCode": 401,
    "statusMessage": "Unauthorized",
    "trailers": Object {},
    "upgrade": false,
    "url": "",
  },
  "stack": Any<String>,
}
`;
